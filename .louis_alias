#!/usr/bin/env bash

# set -x

DEFAULT_BROWSER=firefox

if [[ -e $HOME/.credentials.rc ]]; then
  source $HOME/.credentials.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.github_action.rc ]]; then
  source $HOME/_workspace/dotfiles/.github_action.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.date.rc ]]; then
  source $HOME/_workspace/dotfiles/.date.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.common.rc ]]; then
  source $HOME/_workspace/dotfiles/.common.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.electronic.rc ]]; then
  source $HOME/_workspace/dotfiles/.electronic.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.secret.rc ]]; then
  source $HOME/_workspace/dotfiles/.secret.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.bash-palette.sh ]]; then
  source $HOME/_workspace/dotfiles/.bash-palette.sh
fi

if [[ -e $HOME/_workspace/dotfiles/.raspi.rc ]]; then
  source $HOME/_workspace/dotfiles/.raspi.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.travis.rc ]]; then
  source $HOME/_workspace/dotfiles/.travis.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.drone.rc ]]; then
  source $HOME/_workspace/dotfiles/.drone.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.install.rc ]]; then
  source $HOME/_workspace/dotfiles/.install.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.ssh_alias.rc ]]; then
  source $HOME/_workspace/dotfiles/.ssh_alias.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.develop.rc ]]; then
  source $HOME/_workspace/dotfiles/.develop.rc
fi


if [[ -e $HOME/_workspace/dotfiles/.firefox_alias.rc ]]; then
  source $HOME/_workspace/dotfiles/.firefox_alias.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.fabric.rc ]]; then
  source $HOME/_workspace/dotfiles/.fabric.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.js.rc ]]; then
  source $HOME/_workspace/dotfiles/.js.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.docker.rc ]]; then
  source $HOME/_workspace/dotfiles/.docker.rc
fi

if [[ -e $HOME/_workspace/dotfiles/.directory.rc ]]; then
  source $HOME/_workspace/dotfiles/.directory.rc
fi

PushingToGithub(){
  # echo -e ${PALETTE_REVERSE}${PALETTE_GREEN}${PALETTE_BOLD}${PALETTE_BLINK} Pushing to github, bye... ${PALETTE_RESET}
  testFlashGreenBackground "Pushing to github"
}

initPipenv(){
  touch Pipfile
  pipenv check
  pipenv lock
}

sendTmateAddrToSlack(){
  tm address
  tm slack send_file home
}

prusaslicer(){
  /home/logic/Appimage/PrusaSlicer-2.2.0+linux-x64-202003211856.AppImage
}

rsyncDirs(){
  rsync -avz --exclude '.git' --exclude '.cache' $1 $2
}

genCert(){
  # https://codebug.vip/questions-2185642.htm

  openssl rand
  touch ~/.rnd

  set -x

  # openssl genrsa -des3 -out rootCA.key 4096
  openssl req -x509 -newkey rsa:4096 -sha256 -nodes -keyout example.key.pem -out example.cert.pem -subj "/CN=example.com" -days 30

}

codeDotDevelop(){
  code ~/_workspace/dotfiles/.develop.rc
}

syncDotFiles(){
  testFlashBlueBackground "start sync dot files... "

  OWD=`pwd`

  cd $HOME
    rm -rf .louis_alias

    rm -rf .sshrc
    rm -rf .sshrc.d

    rm -rf .common.rc
    rm -rf .travis.rc
    rm -rf .install.rc
    rm -rf .raspi.rc

    # alias
    rm -rf .firefox_alias.rc
    rm -rf .ssh_alias.rc

    rm -rf .bash-palette.sh

    ln -s  $HOME/_workspace/dotfiles/.louis_alias .louis_alias
    ln -s  $HOME/_workspace/dotfiles/.sshrc .sshrc
    ln -s  $HOME/_workspace/dotfiles/.sshrc.d .sshrc.d

    ln -s  $HOME/_workspace/dotfiles/.ssh_alias.rc .ssh_alias.rc
    ln -s  $HOME/_workspace/dotfiles/.firefox_alias.rc .firefox_alias.rc

    ln -s  $HOME/_workspace/dotfiles/.bash-palette.sh .bash-palette.sh
    ln -s  $HOME/_workspace/dotfiles/.raspi.rc .raspi.rc
    ln -s  $HOME/_workspace/dotfiles/.common.rc .common.rc
    ln -s  $HOME/_workspace/dotfiles/.travis.rc .travis.rc
    ln -s  $HOME/_workspace/dotfiles/.install.rc .install.rc

  cd $HOME/_workspace/dotfiles
    git pull
    git add -f $HOME/_workspace/dotfiles/.gitignore
    git add -f $HOME/_workspace/dotfiles/.louis_alias
    git add -f $HOME/_workspace/dotfiles/.sshrc
    git add -f $HOME/_workspace/dotfiles/.sshrc.d

    git add -f $HOME/_workspace/dotfiles/.ssh_alias.rc
    git add -f $HOME/_workspace/dotfiles/.firefox_alias.rc
    git add -f $HOME/_workspace/dotfiles/.develop.rc

    git add -f $HOME/_workspace/dotfiles/.bash-palette.sh
    git add -f $HOME/_workspace/dotfiles/.raspi.rc
    git add -f $HOME/_workspace/dotfiles/.common.rc
    git add -f $HOME/_workspace/dotfiles/.travis.rc
    git add -f $HOME/_workspace/dotfiles/.install.rc

    git add -f $HOME/_workspace/dotfiles/fabfile.py.old

    git commit -m"update dot files,"

    git pull

    git push &

    PushingToGithub

  cd $OWD

  set +ex
}

checkLeaking(){
  TMP_DIR=$(mktemp -d)

  cd $TMP_DIR
    rsync -avzh --progress /home/logic/_workspace/travis-playlist/travis-check-leak/ .

    pipenv sync
    pipenv run python3 main.py $PWD
  cd -

  trap 'rm -rf $TMP_DIR' EXIT

}

gitPushNewBranch() {
  set -e

  CURR_REPO=`git rev-parse --abbrev-ref HEAD`
  git push -f --set-upstream origin $CURR_REPO  $@ &

  PushingToGithub

  set +e
}

gitPush(){

  git push &
  testFlashGreenBackground "git push in background , bye... "

}

updateCredentials() {
  rsync -a -e "ssh -p $HOME_SSH_PORT" /home/logic/.credentials.rc logic@$HOME_IP:/home/logic
}

gitResetMasterCommits(){
  git branch -D latest_branch
  git checkout --orphan latest_branch
  git add -A
  git commit -am "ci: reset master commit"
  git branch -D master
  git branch -m master
  git push -f origin master

}

getAllGitWorkBranch(){
  git branch -r > /home/logic/_del/branches_all.txt
  grep -v 'develop\|master\|gh-pages' /home/logic/_del/branches_all.txt > /home/logic/_del/branches_to_delete.txt
  code /home/logic/_del/branches_to_delete.txt
}

gcoNewBranch(){

SCRIPT_ARG="$@" python << END
import os,sys
import subprocess
from pprint import pprint
branch_name='-'.join(os.environ['SCRIPT_ARG'].split(' '))
command = 'git checkout -b {}'.format(branch_name)
# print("command: {}".format(command))
print(subprocess.check_output(command.split(' ')))
END

echo 'done'
}

delGitWorkBranch(){
python << END
import subprocess
from multiprocessing.dummy import Pool as ThreadPool
from subprocess import check_output

def command(n):
  command = "git push -d origin " + n
  print('deleting branch' + n + ' ... ')
  return check_output(command.split(' '))

def calculateParallel(branches, threads=2):
    pool = ThreadPool(threads)
    results = pool.map(command, branches)
    pool.close()
    pool.join()
    return results

branches = open('/home/logic/_del/branches_to_delete.txt', 'r').readlines()
branch_list = [branch.replace('  origin/','').strip() for branch in branches]
results = calculateParallel(branch_list, 4)
for result in results:
    print(result)

END
  echo "done"
}

findAllHost() {
  nmap -sP 192.168.88.0/24
  nmap -sP 192.168.99.0/24
}

cleanNodeModules(){
  testFlashGreenBackground 'starting to clean the node_modules directories ... '

  find . -name "node_modules" -type d -prune -exec rm -rf '{}' +

  testFlashGreenBackground 'done'
}

cleanPipenvCache(){
  testFlashGreenBackground 'starting to clean the pipenv directories ... '

  rm -rf /home/logic/.local/share/virtualenvs/*

  testFlashGreenBackground 'done'
}

gitSync(){
  set -x

  testFlashGreenBackground 'syncing to git repo...'

  git fetch --all
  git merge origin/develop &
  git merge origin/master &
  wait

  testFlashGreenBackground 'done'

  set +x
}

updateAndPowerOff(){
  sudo apt-get update
  sudo apt-get upgrade -y
  sudo poweroff
}


resourceMe(){
  source $HOME/_workspace/dotfiles/.louis_alias
}

liveServerHttps(){
  live-server --https=/usr/lib/node_modules/live-server-https $1
}

wgetMirror(){
  wget --mirror --convert-links --adjust-extension --page-requisites --no-parent $1

}

trash(){
  mv $1 /home/$USER/.local/share/Trash/files
}

sendWormHole(){
  HOSTNAME=`hostname`
  rm -rf /tmp/temp.zip
  zip -r -P $HOSTNAME /tmp/temp.zip $1
  wormhole send /tmp/temp.zip
}

syncGitWorks(){
  set -x

python3 << END
import os,sys
import subprocess
from pprint import pprint
from subprocess import check_output, Popen

list_git_directories = list(sorted(
  set([
  '/home/logic/_workspace/appium-playlist',
  '/home/logic/_workspace/AR9331-playlist',
  '/home/logic/_workspace/CNC-playlist',
  '/home/logic/_workspace/company-background-search',
  '/home/logic/_workspace/cubieboard2-playlist',
  '/home/logic/_workspace/daily-page-tapping',
  '/home/logic/_workspace/deno-playlist',
  '/home/logic/_workspace/docsify-playlist',
  '/home/logic/_workspace/esp32-cam-playlist',
  '/home/logic/_workspace/expo-playlist',
  '/home/logic/_workspace/freecad-playlist',
  '/home/logic/_workspace/gatsbyjs-playlist',
  '/home/logic/_workspace/github-playlist',
  '/home/logic/_workspace/i3mega-playlist',
  '/home/logic/_workspace/js-playlist',
  '/home/logic/_workspace/louiscklaw',
  '/home/logic/_workspace/Makefile-playlist',
  '/home/logic/_workspace/nextjs-playlist',
  '/home/logic/_workspace/nmap-playlist',
  '/home/logic/_workspace/orange-pi-zero-playlist',
  '/home/logic/_workspace/page-change-detect-tryout',
  '/home/logic/_workspace/portfolio-gatsby',
  '/home/logic/_workspace/preactjs-playlist',
  '/home/logic/_workspace/puppeteer-playlist',
  '/home/logic/_workspace/python-playlist',
  '/home/logic/_workspace/raspberry-pi-playlist',
  '/home/logic/_workspace/react-playlist',
  '/home/logic/_workspace/rust-playlist',
  '/home/logic/_workspace/selenium-playlist',
  '/home/logic/_workspace/sfx-power-supply-playlist',
  '/home/logic/_workspace/travis-playlist',
  '/home/logic/_workspace/web-playlist',
  '/home/logic/_workspace/micropython-playlist',
  '/home/logic/_workspace/platformio-playlist',
  '/home/logic/_workspace/webpack-playlist'
])
))

for git_dir in list_git_directories:
  try:
    print('processing directory {}'.format(git_dir))
    print('running git fetch',)
    check_output('git fetch --all'.split(' '), cwd=git_dir)
    print('running git pull',)
    check_output('git pull origin master'.split(' '), cwd=git_dir)
    check_output('git pull origin develop'.split(' '), cwd=git_dir)
    print('running git push',)
    check_output('git push'.split(' '), cwd=git_dir)

  except Exception as e:
    print('error during processing directory {} ...'.format(git_dir))
    raise e
END

  set +x
}

syncGitWorks1(){
  set -x

  echo "sync git works "
  OWD=`pwd`

  cd /home/logic/_workspace/appium-playlist && gitSync
  cd /home/logic/_workspace/AR9331-playlist && gitSync
  # archived
  # cd /home/logic/_workspace/buildkite-playlist && gitSync
  cd /home/logic/_workspace/CNC-playlist && gitSync
  cd /home/logic/_workspace/company-background-search && gitSync
  cd /home/logic/_workspace/cubieboard2-playlist && gitSync
  cd /home/logic/_workspace/deno-playlist && gitSync
  # # cd /home/logic/_workspace/docker-playlist && gitSync
  # cd /home/logic/_workspace/docsify-playlist && gitSync
  # cd /home/logic/_workspace/esp32-cam-playlist && gitSync
  # cd /home/logic/_workspace/expo-playlist && gitSync
  # cd /home/logic/_workspace/freecad-playlist && gitSync
  # cd /home/logic/_workspace/gatsbyjs-playlist && gitSync
  # # cd /home/logic/_workspace/genimage-playlist && gitSync
  # cd /home/logic/_workspace/github-playlist && gitSync
  # # archived
  # # cd /home/logic/_workspace/graphQL-playlist && gitSync
  # cd /home/logic/_workspace/i3mega-playlist && gitSync
  # cd /home/logic/_workspace/js-playlist && gitSync
  # cd /home/logic/_workspace/louiscklaw && gitSync
  # cd /home/logic/_workspace/Makefile-playlist && gitSync
  # cd /home/logic/_workspace/nextjs-playlist && gitSync
  # cd /home/logic/_workspace/nmap-playlist && gitSync
  # cd /home/logic/_workspace/orange-pi-zero-playlist && gitSync
  # cd /home/logic/_workspace/page-change-detect-tryout && gitSync
  # cd /home/logic/_workspace/portfolio-gatsby && gitSync
  # cd /home/logic/_workspace/preactjs-playlist && gitSync
  # cd /home/logic/_workspace/puppeteer-playlist && gitSync
  # cd /home/logic/_workspace/python-playlist && gitSync
  # cd /home/logic/_workspace/raspberry-pi-playlist && gitSync
  # cd /home/logic/_workspace/react-playlist && gitSync
  # cd /home/logic/_workspace/rust-playlist && gitSync
  # cd /home/logic/_workspace/selenium-playlist && gitSync
  # cd /home/logic/_workspace/sfx-power-supply-playlist && gitSync
  # cd /home/logic/_workspace/travis-playlist && gitSync
  # cd /home/logic/_workspace/webpack-playlist && gitSync
  # cd /home/logic/_workspace/web-playlist && gitSync
  # cd /home/logic/_workspace/daily-page-tapping && gitSync
  # cd /home/logic/_workspace/youtube-split-view-tryout-admin && gitSync

  cd $OWD

  wait

  set +ex

  echo "done !"
}

editStock(){
  cd /home/logic/_workspace/stock_buy_sell_sheet/fetch-yahoo-finance
    ./run.sh &

  cd /home/logic/_workspace/stock_buy_sell_sheet

    libreoffice ./buy_sell_record.ods &
    libreoffice ./plan_sheets.ods &

    wait
  cd ~
}

codeStock(){
  code /home/logic/_workspace/stock_buy_sell_sheet/fetch-yahoo-finance
}

syncStock(){
  echo "sync stock"
  cd /home/logic/_workspace/stock_buy_sell_sheet
    git pull

    git add .

    git commit -m"update,"

    git push &
  cd -

  echo "done !"
}

gitClone(){
  set -ex

  git clone $1 &

  set +ex
}

syncAll_delete(){
  set -x

  syncGitWorks
  syncTodo
  syncStock
  syncDotFiles

  set +ex

  echo "syncall done"

}

rsyncCloneNodeProject(){
  rsync -avz --exclude 'node_modules' --exclude 'public' $1/ $2
}

backupEtcToHome(){
  sudo rsync -avzh --progress /etc/ /home/logic/etc_backup
}

gitCloneMyProject(){
  git clone git@github.com:louiscklaw/$1.git
}

newGatsbyProject(){

  gatsby new .

  yarn add prettier --dev --exact

  yarn add gatsby-plugin-offline

  yarn add gatsby-plugin-sass
  yarn add node-sass

  yarn add firebase

  yarn add lodash
  yarn add bulma
  yarn add @creativebulma/bulma-divider

  yarn add react-hook-form

  yarn build

  cp .cache/default-html.js src/html.js

}

configUbuntu(){

  # configure after done
  sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target

  # remove origional dock
  sudo apt remove -y gnome-shell-extension-ubuntu-dock

  # disable error reporting
  sudo systemctl disable apport
  sudo apt purge -y apport

  # disable automount in gnome for usb device
  gsettings set org.gnome.desktop.media-handling automount false
  gsettings get org.gnome.desktop.media-handling automount

  gsettings set org.gnome.desktop.media-handling automount-open false
  gsettings get org.gnome.desktop.media-handling automount-open

  sudo snap set system refresh.retain=2


  # increase file watch number
  echo fs.inotify.max_user_watches=1638400 | sudo tee -a /etc/sysctl.conf
  sudo sysctl -p

}

ariaDownload(){
  set -x

  aria2c -x 16 -s 99999 $@

  set +x
}

rsyncSsh(){
  rsync -avzhe ssh /home/pi/ pi@192.168.88.81:/home/pi
}

openStockPlan(){
  cd /home/logic/_workspace/stock_buy_sell_sheet
    libreoffice ./plan_sheets.ods &
  cd ~
}

findKB(){
  testFlashBlueBackground "finding the terms "$@

  find /home/logic/_workspace -type d -max-depth=1
}

rsyncGatsbyProject(){
  rsync -avzh --exclude node_modules $@
}

codeGatsbyPlaylist(){
  code ~/_workspace/gatsbyjs-playlist
}

testDNS(){
  while true; do
    nslookup $@ 192.168.88.20
    sleep 0.02
  done
}

codeSongList(){
  code /home/logic/_workspace/dotfiles/.songlist.rc
}

syncWorkDir(){
  echo 'syncing workdir ' $@
  cd $@
    git fetch --all
    git pull
}

codeHist(){
  code "$HISTFILE"
}

syncWorkspace(){
  OWD=$PWD

  # gen_syncWorkDir_start
  # generated by scripts/gen_syncWorkDir.py, don't edit this directly !!!

  # syncWorkDir "/home/logic/_workspace/AR9331-playlist" &
  # syncWorkDir "/home/logic/_workspace/CNC-playlist" &
  # syncWorkDir "/home/logic/_workspace/Makefile-playlist" &
  # syncWorkDir "/home/logic/_workspace/aastock-playlist" &
  # syncWorkDir "/home/logic/_workspace/ai-playlist" &
  # syncWorkDir "/home/logic/_workspace/appium-playlist" &
  # syncWorkDir "/home/logic/_workspace/arduino-playlist" &
  # syncWorkDir "/home/logic/_workspace/buildkite-playlist" &
  # syncWorkDir "/home/logic/_workspace/code-coverage-playlist" &
  # syncWorkDir "/home/logic/_workspace/cubieboard2-playlist" &
  # syncWorkDir "/home/logic/_workspace/deno-playlist" &
  syncWorkDir "/home/logic/_workspace/docker-playlist" &
  # syncWorkDir "/home/logic/_workspace/docsify-playlist" &
  # syncWorkDir "/home/logic/_workspace/drone-ci-playlist" &
  # syncWorkDir "/home/logic/_workspace/esp32-cam-playlist" &
  # syncWorkDir "/home/logic/_workspace/esp32-playlist" &
  # syncWorkDir "/home/logic/_workspace/expo-playlist" &
  # syncWorkDir "/home/logic/_workspace/firebase-playlist" &
  syncWorkDir "/home/logic/_workspace/freecad-playlist" &
  # syncWorkDir "/home/logic/_workspace/freenas-playlist" &
  # syncWorkDir "/home/logic/_workspace/gatsbyjs-playlist" &
  # syncWorkDir "/home/logic/_workspace/genimage-playlist" &
  syncWorkDir "/home/logic/_workspace/github-playlist" &
  # syncWorkDir "/home/logic/_workspace/google-api-playlist" &
  # syncWorkDir "/home/logic/_workspace/graphQL-playlist" &
  # syncWorkDir "/home/logic/_workspace/hugo-playlist" &
  # syncWorkDir "/home/logic/_workspace/i3mega-playlist" &
  # syncWorkDir "/home/logic/_workspace/jenkins-playlist" &
  # syncWorkDir "/home/logic/_workspace/jobsdb-playlist" &
  syncWorkDir "/home/logic/_workspace/js-playlist" &
  # syncWorkDir "/home/logic/_workspace/json-playlist" &
  # syncWorkDir "/home/logic/_workspace/markdown-playlist" &
  # syncWorkDir "/home/logic/_workspace/my-github-endpoint-playlist" &
  # syncWorkDir "/home/logic/_workspace/nextjs-playlist" &
  # syncWorkDir "/home/logic/_workspace/nmap-playlist" &
  # syncWorkDir "/home/logic/_workspace/orange-pi-zero-playlist" &
  # syncWorkDir "/home/logic/_workspace/preactjs-playlist" &
  # syncWorkDir "/home/logic/_workspace/puppeteer-playlist" &
  # syncWorkDir "/home/logic/_workspace/python-playlist" &
  # syncWorkDir "/home/logic/_workspace/raspberry-pi-playlist" &
  syncWorkDir "/home/logic/_workspace/react-playlist" &
  # syncWorkDir "/home/logic/_workspace/robot-playlist" &
  # syncWorkDir "/home/logic/_workspace/rust-playlist" &
  # syncWorkDir "/home/logic/_workspace/selenium-playlist" &
  # syncWorkDir "/home/logic/_workspace/sfx-power-supply-playlist" &
  syncWorkDir "/home/logic/_workspace/travis-playlist" &
  # syncWorkDir "/home/logic/_workspace/vue-playlist" &
  # syncWorkDir "/home/logic/_workspace/web-playlist" &
  # syncWorkDir "/home/logic/_workspace/webpack-playlist" &
  syncWorkDir "/home/logic/_workspace/DS213-playlist" &

  # gen_syncWorkDir_end

  syncWorkDir "/home/logic/_workspace/my-inventory" &

  wait

  cd $OWD
}

syncLouis(){
  syncDotFiles

  resourceMe

  syncTodo &
  syncInventory &
  syncStock &
  syncWorkspace &

  wait
}

listAlias(){
  grep -ri "(){" . |sort
}

rsyncHome(){
  for i in $(ls -1 $@); do
    rsync -avzh --progress -e "ssh -p $HOME_SSH_PORT" $i logic@$HOME_IP:/home/logic/Downloads &
  done

  wait
}

codePortfolio(){
  code /home/logic/_workspace/portfolio-gatsby
}

syncCredentialsHome(){
  rsync -avzhu --progress -e "ssh -p $HOME_SSH_PORT" /home/logic/.credentials.rc logic@$HOME_IP:/home/logic/.credentials.rc
  rsync -avzhu --progress -e "ssh -p $HOME_SSH_PORT" logic@$HOME_IP:/home/logic/.credentials.rc /home/logic/.credentials.rc

  rsync -avzhu --progress -e "ssh -p $HOME_SSH_PORT" /home/logic/.credentials/ logic@$HOME_IP:/home/logic/.credentials
  rsync -avzhu --progress -e "ssh -p $HOME_SSH_PORT" logic@$HOME_IP:/home/logic/.credentials/ /home/logic/.credentials

  echo 'done'
}

alias createReactApp='npx create-react-app .'

if [[ -e $HOME/_workspace/github-playlist/gitignore-template/scripts.rc ]]; then
  source $HOME/_workspace/github-playlist/gitignore-template/scripts.rc
fi

if [[ -e $HOME/_workspace/github-playlist/editorconfig/scripts.rc ]]; then
  source $HOME/_workspace/github-playlist/editorconfig/scripts.rc
fi

if [[ -e $HOME/_workspace/github-playlist/editorconfig/scripts.rc ]]; then
  source $HOME/_workspace/github-playlist/editorconfig/scripts.rc
fi

if [[ -e $HOME/_workspace/docker-playlist/scripts.rc ]]; then
  source $HOME/_workspace/docker-playlist/scripts.rc
fi

true

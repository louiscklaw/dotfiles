#!/usr/bin/env bash

# set -x

if [[ -e $HOME/.common.rc ]]; then
  source $HOME/.common.rc
fi

travisConditionTests(){
  set -x
  travis-conditions eval "branch = master" --data '{"branch": "master"}'
  travis-conditions eval "branch = develop" --data '{"branch": "develop"}'
  travis-conditions eval "branch =~ /test\/\.*/" --data '{"branch": "test/123"}'
  travis-conditions eval "NOT branch =~ /test\/\.*/" --data '{"branch": "tes1t/123"}'
  travis-conditions eval "NOT branch =~ /cron\/1/ OR branch =~ /cron\/2/" --data '{"branch": "cron/1"}'
  travis-conditions eval "NOT branch =~ /routine\/.*/" --data '{"branch": "master"}'
  travis-conditions eval "NOT branch =~ /routine\/.*/" --data '{"branch": "routine/1"}'
  travis-conditions eval "NOT branch =~ /cron\/1/ OR branch =~ /cron\/2/" --data '{"branch": "master"}'
}

travisHistory(){
  travis history --com
}

travisSync(){
  travis sync --com &
}


travisOpen(){
  remote_get_url=$(git remote get-url origin 2>&1)
  if [[ $remote_get_url =~ .*fatal.* ]]; then
    echo "cannot find remote origin"
  else
    echo "remote origin " $remote_get_url
    http_link=${remote_get_url/git@github\.com:/https:\/\/travis-ci.com\/github/}
    http_link=${http_link/.com:/.com/}
    http_link=${http_link/.git//builds}
    firefox $http_link &
  fi

}

travisRequests(){
  firefox https://travis-ci.com/github/louiscklaw/company-background-search/requests &
}

travisLogin(){
  travis login --com --github-token $GITHUB_TRAVIS_TOKEN
}

installTravis(){
  sudo apt-get install -y ruby ruby-dev
  sudo gem install travis
  sudo gem install travis-conditions

  travis endpoint --com --set-default

}

runTravisDockerImage(){
  docker kill travis-build
  docker rm travis-build

  docker pull $@
  set -e
  DOCKER_TAG=${1:-$@}
  docker run --rm --name travis-build -dit \
    --mount type=bind,source=`pwd`,target=/home/travis/work_dir \
    $DOCKER_TAG /bin/bash

  echo "Now run 'su - travis', followed by all the steps from your Travis CI log."
  echo "The project is mounted in /home/travis/work_dir."
  docker exec -it travis-build bash -l
  docker kill travis-build
}

dockerTravisUbuntuSystemd1804(){
  runTravisDockerImage travisci/ubuntu-systemd:18.04
}

dockerTravisUbuntuSystemd1604(){
  runTravisDockerImage travisci/ubuntu-systemd:16.04
}

dockerTravisUbuntu1804(){
  runTravisDockerImage travisci/ci-ubuntu-1804:packer-1593521720-ca42795e
}

dockerTravisUbuntu2004(){
  runTravisDockerImage travisci/ci-ubuntu-2004:packer-1593521720-ca42795e

  # curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
}

dockerTravisNodejs12(){
  touch .env.docker
  docker run -it \
    --env-file .env.docker \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v $PWD:/root/work_dir \
    --rm \
    logickee/travis_node12 \
    /bin/bash
}

alias genTravisToken=/home/logic/_workspace/travis-playlist/gen_travis_token/.gen_travis_token.py
# genTravisToken(){
#   TARGET_DIR=$PWD
#   cd $HOME/_workspace/travis-playlist/gen_travis_token
#     pipenv sync
#     pipenv run python3 gen_travis_token.py $TARGET_DIR
#   cd -
# }

alias getTravisHelloworld=/home/logic/_workspace/travis-playlist/scripts/get_travis_helloworld.sh
alias getTravisMerger=/home/logic/_workspace/travis-playlist/travis-build-merger/get_merge_yml.sh

if [[ -e $HOME/_workspace/travis-playlist/travis-yml-template/scripts.rc ]]; then
  source $HOME/_workspace/travis-playlist/travis-yml-template/scripts.rc
fi

#!/usr/bin/env bash

alias systemctlStartDocker='sudo systemctl start docker'
alias systemctlKillDocker='sudo systemctl kill docker'

alias dcu='docker compose up -d'
alias dcub='docker compose up -d --build'
alias dcubl='docker compose up -d --build && docker compose logs -f'
alias dck='docker compose kill'
alias dce='docker compose exec -it'
alias dcpa='docker compose ps -a'

dka(){
  docker kill `docker ps -qa` || true
}

dcf(){
  docker kill `docker ps -qa` || true
  sleep 1

  for i in {1..3}; do
    echo "docker compose flush -> $i"
    docker container prune -f
    docker system prune -f
    docker image prune -f
    docker volume prune -f
    docker network prune -f
    docker image rm `docker images -qa`
  done
}

dockerClearAll(){
  docker kill `docker ps -qa` || true
  sleep 1

  for i in {1..3}; do

    echo "Welcome $i"

    docker container prune -f
    docker system prune -f
    docker image prune -f
    docker volume prune -f
    docker network prune -f

    docker image rm `docker images -qa`
  
  done

}

dockerReset(){
  docker stop `docker ps -qa`
  docker rm `docker ps -qa`
  docker rmi -f `docker images -qa `
  docker volume rm $(docker volume ls -q)
  docker network rm `docker network ls -q`

}

droneCiHelloworld(){
  docker run \
  --volume=/var/lib/drone:/data \
  --env=DRONE_GITHUB_CLIENT_ID={{DRONE_GITHUB_CLIENT_ID}} \
  --env=DRONE_GITHUB_CLIENT_SECRET={{DRONE_GITHUB_CLIENT_SECRET}} \
  --env=DRONE_RPC_SECRET={{DRONE_RPC_SECRET}} \
  --env=DRONE_SERVER_HOST={{DRONE_SERVER_HOST}} \
  --env=DRONE_SERVER_PROTO={{DRONE_SERVER_PROTO}} \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  --detach=true \
  --name=drone \
  drone/drone:1
}

dockerRun(){
  touch .env.docker
  TMP_DIR=$(mktemp -d)
  TMP_BASH_HISTORY=$TMP_DIR/.bash_history
  # -v $TMP_BASH_HISTORY:/root/.bash_history \

  docker run -it \
    --env-file .env.docker \
    -v $PWD:/app \
    -w /app \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v ~/.ssh/id_rsa:/home/node/.ssh/id_rsa:ro \
    -v ~/.ssh/known_host:/home/node/.ssh/known_hosts:ro \
    -p 3000:3000 \
    -p 8090:8090 \
    -p 5555-5560:5555 \
    --user=1000 \
    --rm \
    $@
}


dockerRunPython(){
  touch .env.docker
  TMP_DIR=$(mktemp -d)
  TMP_BASH_HISTORY=$TMP_DIR/.bash_history
  # -v $TMP_BASH_HISTORY:/root/.bash_history \

  docker run -it \
    -v $PWD:/app \
    -w /app \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v ~/.ssh/id_rsa:/home/node/.ssh/id_rsa:ro \
    -v ~/.ssh/known_host:/home/node/.ssh/known_hosts:ro \
    -p 3000:3000 \
    --rm \
    python:latest \
    bash
}



dockerRunNest(){
  touch .env.docker
  TMP_DIR=$(mktemp -d)
  TMP_BASH_HISTORY=$TMP_DIR/.bash_history
  # -v $TMP_BASH_HISTORY:/root/.bash_history \

  docker run -it \
    --env-file .env.docker \
    -v $PWD:/app \
    -w /app \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v ~/.ssh/id_rsa:/home/node/.ssh/id_rsa:ro \
    -v ~/.ssh/known_host:/home/node/.ssh/known_hosts:ro \
    -p 3001-3099:3000 \
    --user=1000 \
    --rm \
    $@
}

# alias dockerRunUbuntu1804='dockerRun logickee/ubuntu_1804'
alias dockerRunUbuntu1804='dockerRun ubuntu:18.04 bash'
alias dockerRunUbuntu='dockerRun ubuntu:latest bash'
alias dockerRunFedora='dockerRun fedora:latest bash'
# alias dockerRunPython='dockerRun python:latest bash'

alias dockerRunNode='dockerRun node:latest bash'
alias dockerRunNode18='dockerRun node:18-buster bash'
alias dockerRunNode16='dockerRun node:16-buster bash'
alias dockerRunNode14='dockerRun node:14-buster bash'
alias dockerRunNode12='dockerRun node:12-buster bash'
alias dockerRunNode10='dockerRun node:10-buster bash'
alias dockerRunNode8='dockerRun node:8-buster bash'
alias dockerRunNest16='dockerRunNest logickee/docker_nest16_tryout bash'

alias dockerRunHugoDev='docker run -it -v $PWD:/app -p 1313:1313 -w /app logickee/hugo_dev:latest bash'


GET_FULL_REPOSITORY(){
  git remote get-url origin
}

GET_SHORT_REPOSITORY(){
  GET_FULL_REPOSITORY|cut -c16-99|awk -F"." '{print $1}'
}


dockerRunGithub(){
  touch ./.env.docker
  TMP_DIR=$(mktemp -d)

  TMP_BASH_HISTORY=$TMP_DIR/.bash_history
  touch $TEMP_BASH_HISTORY

  NODE_REPL_HISTORY=$TMP_DIR/.node_repl_history
  touch $NODE_REPL_HISTORY

  DOT_CONFIG=$TMP_DIR/.dot_config
  mkdir $DOT_CONFIG

  DOT_NPM=$TMP_DIR/.dot_npm
  mkdir $DOT_NPM

  docker run -it \
    --user runner \
    --env-file /home/logic/.credentials/.env.docker \
    --env-file .env.docker \
    -v $PWD:/home/runner/work_dir \
    -v $TMP_BASH_HISTORY:/home/runner/.bash_history \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v $NODE_REPL_HISTORY:/root/.node_repl_history \
    -v $DOT_CONFIG:/home/runner/.config/ \
    -v $DOT_NPM:/home/runner/.npm \
    -v /tmp:/tmp \
    --rm \
    $@
}

alias dockerRunGithubActionsNode='dockerRunGithub logickee/github_node'
alias dockerRunGithubActionsUbuntu='dockerRunGithub logickee/github_ubuntu'
alias dockerRunGithubActionsPython='dockerRunGithub logickee/github_python'
alias dockerRunGithubActionsGnome='dockerRunGithub logickee/docker_gnome'
alias dockerRunGithubSeleniumClient='dockerRunGithub logickee/github_ubuntu'
alias dockerRunTravisUbuntuSystemd1804='runTravisDockerImage travisci/ubuntu-systemd:18.04'
alias dockerRunTravisUbuntuSystemd1604='runTravisDockerImage travisci/ubuntu-systemd:16.04'
alias dockerRunTravisUbuntu1804='runTravisDockerImage travisci/ci-ubuntu-1804:packer-1593521720-ca42795e'
alias dockerRunTravisUbuntu2004='runTravisDockerImage travisci/ci-ubuntu-2004:packer-1593521720-ca42795e' 

# curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash


dockerRunTravisNodejs12(){
  touch .env.docker
  docker run -it \
    --env-file .env.docker \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v $PWD:/root/work_dir \
    --rm \
    logickee/travis_node12 \
    /bin/bash
}

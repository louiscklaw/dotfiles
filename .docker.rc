
dockerClearAll(){
  set -x

  docker kill $(docker ps -qa)
  docker rm $(docker ps -qa)

  set +x
}

droneCiHelloworld(){
  docker run \
  --volume=/var/lib/drone:/data \
  --env=DRONE_GITHUB_CLIENT_ID={{DRONE_GITHUB_CLIENT_ID}} \
  --env=DRONE_GITHUB_CLIENT_SECRET={{DRONE_GITHUB_CLIENT_SECRET}} \
  --env=DRONE_RPC_SECRET={{DRONE_RPC_SECRET}} \
  --env=DRONE_SERVER_HOST={{DRONE_SERVER_HOST}} \
  --env=DRONE_SERVER_PROTO={{DRONE_SERVER_PROTO}} \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  --detach=true \
  --name=drone \
  drone/drone:1
}

dockerRun(){
  touch .env.docker
  TMP_DIR=$(mktemp -d)
  TMP_BASH_HISTORY=$TMP_DIR/.bash_history

  docker run -it \
    --env-file .env.docker \
    -v $TMP_DIR:/root \
    -v $PWD:/root/work_dir \
    -v $TMP_BASH_HISTORY:/root/.bash_history \
    -v /var/run/docker.sock:/var/run/docker.sock \
    --rm \
    $@
}

dockerRunUbuntu(){
  dockerRun ubuntu:latest bash
}

dockerRunPython(){
  dockerRun python:latest bash
}

dockerRunUbuntu1804(){
  dockerRun ubuntu:18.04
}

dockerRunNode(){
  dockerRun node:latest bash
}

dockerRunGithubActionsUbuntu(){
  dockerRun logickee/github_ubuntu
}
